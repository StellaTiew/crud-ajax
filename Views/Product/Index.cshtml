@model KeysOnboarding2.Models.Product
@{
    ViewBag.Title = "Products";
}

<h2>Product</h2>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />

<div class="container" style="margin-top:3%">
    <a href="#" class="btn btn-info" onclick="AddNewProduct(0)">Add New Product</a> <br /><br />
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Price</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody id="SetProductList">
            <tr id="LoadingStatus" style="color:red"></tr>
        </tbody>
    </table>

    <div class="modal fade" id="ProductModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h4 id="ModalTitle"></h4>
                </div>
                <div class="modal-body">
                    <form id="form">
                        <fieldset id="SubmitForm">
                            @Html.HiddenFor(m => m.Id, new { @id = "Id" })
                            <div class="form-group">
                                @Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.Name, new { @id = "Name", @class = "form-control", @placeholder = "Product Name*" })
                                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.Price, new { @id = "Price", @class = "form-control", @placeholder = "Product Price*" })
                                </div>
                            </div>
                        </fieldset>
                    </form>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-success" id="SaveProductRecord">Save</a>
                </div>
            </div>
        </div>


    </div>

    <div class="modal fade" id="DeleteConfirmation">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h4>Delete Product</h4>
                </div>
                <div class="modal-body">
                    <h4>Are you sure to delete this product?</h4>
                    <form>
                        <fieldset>
                            @Html.HiddenFor(m => m.Id, new { @id = "ProductId" })
                            <div class="form-group">
                                @Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.Name, new { @id = "ProductName", @class = "form-control", @disabled = "disabled" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.Price, new { @id = "ProductPrice", @class = "form-control", @disabled = "disabled" })
                                </div>
                            </div>
                        </fieldset>
                    </form>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-primary" data-dismiss="modal">Cancel</a>
                    <a href="#" class="btn btn-danger" onclick="ConfirmDelete()">Confirm</a>
                </div>
            </div>
        </div>

    </div>
</div>

<script>
    $("#LoadingStatus").html("Loading....");
    $.get("/Product/GetProductList", null, DataBind);
    var allProducts = [];
    function DataBind(ProductList) {
        allProducts = ProductList;
        //This Code For Receive All Data From Controller And Show It In Client Side
        var SetData = $("#SetProductList");
        for (var i = 0; i < ProductList.length; i++) {
            var Data = "<tr class='row_" + ProductList[i].Id + "'>" +
                "<td>" + ProductList[i].Name + "</td>" +
                "<td>" + parseFloat(Math.round(ProductList[i].Price * 100) / 100).toFixed(2) + "</td>" +
                "<td>" + "<a href='#' class='btn btn-warning' onclick='EditProduct(" + ProductList[i].Id + ")' ><span class='glyphicon glyphicon-edit'></span></a>"
                + " " + "<a href='#' class='btn btn-danger' onclick='DeleteProduct(" + ProductList[i].Id + ")'><span class='glyphicon glyphicon-trash'></span></a>" + "</td>" +
                "</tr>";
            SetData.append(Data); 
        }
        $("#LoadingStatus").html(" ");
    }

    //Add Modal
    function AddNewProduct(ProductId) {
        $("#form")[0].reset();
        $("#Id").val(0);
        $("#ModalTitle").html("Add New Product");
        $("#ProductModal").modal();

    }

    //Edit Modal
    function EditProduct(ProductId) {
        var url = "/Product/GetProductById?ProductId=" + ProductId;
        $("#ModalTitle").html("Edit Product Record");
        $("#ProductModal").modal();
        $.ajax({
            type: "GET",
            url: url,
            success: function (data) {
                var obj = JSON.parse(data);
                $("#Id").val(obj.Id);
                $("#Name").val(obj.Name);
                $("#Price").val(parseFloat(Math.round(obj.Price * 100) / 100).toFixed(2));

            }
            
        })
    }

    $("#SaveProductRecord").click(function () {
        var isValidate = Validation();
        if (isValidate) {
            var data = $("form").serialize();
            $.ajax({
                type: "Post",
                url: "/Product/SaveData",
                data: data,
                success: function (result) {
                    window.location.href = "/Product/Index";
                    $("#ProductModal").modal("hide");
                }
            })
        }
        
    })

    //Delete Confirmation
    function DeleteProduct(ProductId) {
        var url = "/Product/GetProductById?ProductId=" + ProductId;
        $("#Id").val(ProductId);
        $("#DeleteConfirmation").modal();
        $.ajax({
            type: "GET",
            url: url,
            success: function (data) {
                var obj = JSON.parse(data);
                $("#ProductId").val(obj.Id);
                $("#ProductName").val(obj.Name);
                $("#ProductPrice").val(obj.Price);
            }
        })
    }

    function ConfirmDelete() {
        var id = $("#ProductId").val();
        $.ajax({
            type: "POST",
            url: "/Product/DeleteProduct?ProductId=" + id,
            success: function (result) {
                $("#DeleteConfirmation").modal("hide");
                $(".row_" + id).remove();
            }
        })
    }

    function Validation() {
        var isValidate = true;
        var name = $("#Name").val();
        var price = $("#Price").val();

        if (!name || 0 === name.length || !name.trim()) {
            alert("The name field is required.")
            isValidate = false;

        } else if (!price) {
            alert("The price field is required.")
            isValidate = false;
        } else if (!$.isNumeric(price)) {
            alert("Only numbers for price.")
            isValidate = false;
        }
        return isValidate;
    }

</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}