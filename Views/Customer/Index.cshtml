@model KeysOnboarding2.Models.Customer
@{
    ViewBag.Title = "Index";
}

<h2>Customer</h2>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />

<div class="container" style="margin-top:3%">
    <a href="#" class="btn btn-info" onclick="AddNewCustomer(0)">Add New Customer</a> <br /><br />
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Age</th>
                <th>Address</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody id="SetCustomerList">
            <tr id="LoadingStatus" style="color:red"></tr>
        </tbody>
    </table>

    <div class="modal fade" id="CustomerModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h4 id="ModalTitle"></h4>
                </div>
                <div class="modal-body">
                    <form id="form">
                        <fieldset id="SubmitForm">
                            @Html.HiddenFor(m => m.Id, new { @id = "Id" })
                            <div class="form-group">
                                @Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.Name, new { @id = "Name", @class = "form-control", @placeholder = "Customer Name*" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.Age, new { @id = "Age", @class = "form-control", @placeholder = "Customer Age*" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.Address, new { @id = "Address", @class = "form-control", @placeholder = "Customer Address*" })
                                </div>
                            </div>
                        </fieldset>
                    </form>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-success" id="SaveCustomer">Save</a>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="DeleteConfirmation">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h4>Delete Customer</h4>
                </div>
                <div class="modal-body">
                    <h4>Are you sure to delete this customer?</h4>
                    <form>
                        <fieldset>
                            @Html.HiddenFor(m => m.Id, new { @id = "CustomerId" })
                            <div class="form-group">
                                @Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.Name, new { @id = "CustomerName", @class = "form-control", @disabled = "disabled" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.Age, new { @id = "CustomerAge", @class = "form-control", @disabled = "disabled" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.Address, new { @id = "CustomerAddress", @class = "form-control", @disabled = "disabled" })
                                </div>
                            </div>
                        </fieldset>
                    </form>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-primary" data-dismiss="modal">Cancel</a>
                    <a href="#" class="btn btn-danger" onclick="ConfirmDelete()">Confirm</a>
                </div>
            </div>
        </div>

    </div>
</div>

<script>
    $("#LoadingStatus").html("Loading....");
    $.get("/Customer/GetCustomerList", null, DataBind);
    function DataBind(CustomerList) {
        //This Code For Receive All Data From Controller And Show It In Client Side
        var SetData = $("#SetCustomerList");
        for (var i = 0; i < CustomerList.length; i++) {
            var Data = "<tr class='row_" + CustomerList[i].Id + "'>" +
                "<td>" + CustomerList[i].Name + "</td>" +
                "<td>" + CustomerList[i].Age + "</td>" +
                "<td>" + CustomerList[i].Address + "</td>" +
                "<td>" + "<a href='#' class='btn btn-warning' onclick='EditCustomer(" + CustomerList[i].Id + ")' ><span class='glyphicon glyphicon-edit'></span></a>"
                + " " + "<a href='#' class='btn btn-danger' onclick='DeleteCustomer(" + CustomerList[i].Id + ")'><span class='glyphicon glyphicon-trash'></span></a>" + "</td>" +
                "</tr>";
            SetData.append(Data);
        }
        $("#LoadingStatus").html(" ");
    }

    //Add Modal
    function AddNewCustomer(CustomerId) {
        $("#form")[0].reset();
        $("#Id").val(0);
        $("#ModalTitle").html("Add New Customer");
        $("#CustomerModal").modal();

    }

    //Edit Modal
    function EditCustomer(CustomerId) {
        var url = "/Customer/GetCustomerById?CustomerId=" + CustomerId;
        $("#ModalTitle").html("Edit Customer Record");
        $("#CustomerModal").modal();
        $.ajax({
            type: "GET",
            url: url,
            success: function (data) {
                var obj = JSON.parse(data);
                $("#Id").val(obj.Id);
                $("#Name").val(obj.Name);
                $("#Age").val(obj.Age);
                $("#Address").val(obj.Address);
            }
        })
    }

    $("#SaveCustomer").click(function () {
        var isValidate = Validation();
        if (isValidate) {
            var data = $("form").serialize();
            $.ajax({
                type: "Post",
                url: "/Customer/SaveData",
                data: data,
                success: function (result) {
                    window.location.href = "/Customer/Index";
                    $("#CustomerModal").modal("hide");

                }
            })
        }
        
    })

    //Delete Confirmation
    function DeleteCustomer(CustomerId) {
        var url = "/Customer/GetCustomerById?CustomerId=" + CustomerId;
        $("#Id").val(CustomerId);
        $("#DeleteConfirmation").modal();
        $.ajax({
            type: "GET",
            url: url,
            success: function (data) {
                var obj = JSON.parse(data);
                $("#CustomerId").val(obj.Id);
                $("#CustomerName").val(obj.Name);
                $("#CustomerAge").val(obj.Age);
                $("#CustomerAddress").val(obj.Address);
            }
        })
    }

    function ConfirmDelete() {
        var id = $("#CustomerId").val();
        $.ajax({
            type: "POST",
            url: "/Customer/DeleteCustomer?CustomerId=" + id,
            success: function (result) {
                $("#DeleteConfirmation").modal("hide");
                $(".row_" + id).remove();
            }
        })
    }

    function Validation() {
        var isValidate = true;
        var name = $("#Name").val();
        var age = $("#Age").val();
        var address = $("#Address").val();

        if (!name || 0 === name.length || !name.trim()) {
            alert("The name field is required.")
            isValidate = false;

        } else if (!age) {
            alert("The age field is required.")
            isValidate = false;
        } else if (!address || 0 === address.length || !address.trim()) {
            alert("The address field is required.")
            isValidate = false;
        } else if (!$.isNumeric(age)) {
            alert("Only numbers for age.")
            isValidate = false;
        }
        return isValidate;
    }
</script>