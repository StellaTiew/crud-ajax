@model KeysOnboarding2.Models.ProductSold
@{
    ViewBag.Title = "Index";
}

<h2>Sales</h2>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />

<div class="container" style="margin-top:3%">
    <a href="#" class="btn btn-info" onclick="AddNewSales(0)">Add New Sales</a> <br /><br />
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Product</th>
                <th>Customer</th>
                <th>Store</th>
                <th>Date Sold</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody id="SetSalesList">
            <tr id="LoadingStatus" style="color:red"></tr>
        </tbody>
    </table>

    <div class="modal fade" id="SalesModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h4 id="ModalTitle"></h4>
                </div>
                <div class="modal-body">
                    <form id="form">
                        <fieldset id="SubmitForm">
                            @Html.HiddenFor(m => m.Id, new { @id = "Id" })
                            <div class="form-group">
                                @Html.LabelFor(m => m.Product, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(m => m.ProductId, ViewBag.Products as SelectList, "--Select Product--", new { @id = "ProductDropDown", @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Customer, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(m => m.CustomerId, ViewBag.Customers as SelectList, "--Select Customer--", new { @id = "CustomerDropDown", @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Store, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(m => m.StoreId, ViewBag.Stores as SelectList, "--Select Store--", new { @id = "StoreDropDown", @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.DateSold, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.DateSold, new { @id = "DateSold", @class = "form-control", @placeholder = "YYYY-MM-DD*" })

                                </div>
                            </div>
                        </fieldset>
                    </form>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-success" id="SaveSales">Save</a>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="DeleteConfirmation">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h4>Delete Sales</h4>
                </div>
                <div class="modal-body">
                    <h4>Are you sure to delete this record?</h4>
                    <form>
                        <fieldset>
                            @Html.HiddenFor(m => m.Id, new { @id = "SalesId" })
                            <div class="form-group">
                                @Html.LabelFor(m => m.Product, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(m => m.ProductId, ViewBag.Products as SelectList, "--Select Product--", new { @id = "SalesProductDropDown", @class = "form-control", @disabled = "disabled" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Customer, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(m => m.CustomerId, ViewBag.Customers as SelectList, "--Select Customer--", new { @id = "SalesCustomerDropDown", @class = "form-control", @disabled = "disabled" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Store, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(m => m.StoreId, ViewBag.Stores as SelectList, "--Select Store--", new { @id = "SalesStoreDropDown", @class = "form-control", @disabled = "disabled" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.DateSold, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.DateSold, new { @id = "SalesDateSold", @class = "form-control", @placeholder = "DateSold*", @disabled = "disabled" })

                                </div>
                            </div>
                        </fieldset>
                    </form>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-primary" data-dismiss="modal">Cancel</a>
                    <a href="#" class="btn btn-danger" onclick="ConfirmDelete()">Confirm</a>
                </div>
            </div>
        </div>

    </div>
</div>

<script>
    $("#LoadingStatus").html("Loading....");
    $.get("/Sales/GetSalesList", null, DataBind);
    function DataBind(SalesList) {
        //This Code For Receive All Data From Controller And Show It In Client Side
        var SetData = $("#SetSalesList");
        for (var i = 0; i < SalesList.length; i++) {
            var Data = "<tr class='row_" + SalesList[i].Id + "'>" +
                "<td>" + SalesList[i].ProductName + "</td>" +
                "<td>" + SalesList[i].CustomerName + "</td>" +
                "<td>" + SalesList[i].StoreName + "</td>" +
                "<td>" + parseJsonDate(SalesList[i].DateSold) + "</td>" +
                "<td>" + "<a href='#' class='btn btn-warning' onclick='EditSales(" + SalesList[i].Id + ")' ><span class='glyphicon glyphicon-edit'></span></a>"
                + " " + "<a href='#' class='btn btn-danger' onclick='DeleteSales(" + SalesList[i].Id + ")'><span class='glyphicon glyphicon-trash'></span></a>" + "</td>" +
                "</tr>";
            SetData.append(Data);
        }
        $("#LoadingStatus").html(" ");
    }

    function parseJsonDate(jsonDateString) {
        var myDate = new Date(jsonDateString.match(/\d+/)[0] * 1);
        //return myDate.getMonth() + 1 + "/" + myDate.getDate() + "/" + myDate.getYear();
        //return new Date(parseInt(jsonDateString.substr(6)));

        var value = new Date(parseInt(jsonDateString.replace(/(^.*\()|([+-].*$)/g, '')));
        var date = value.getMonth() + 1 + "/" + value.getDate() + "/" + value.getFullYear();
        //var date = value.getFullYear() + "-" + value.getMonth() + 1 + "-" + value.getDate();
        //return myDate.toJSON().slice(0, 10);
        
        return date;
    }

    //Add Modal
    function AddNewSales(SalesId) {
        $("#form")[0].reset();
        $("#Id").val(0);
        $("#ModalTitle").html("Add New Sales");
        $("#ProductDropDown option:selected").text("--Select Product--");
        $("#CustomerDropDown option:selected").text("--Select Customer--");
        $("#StoreDropDown option:selected").text("--Select Store--");
        $("#SalesModal").modal();

    }

    //Edit Modal
    function EditSales(SalesId) {
        var url = "/Sales/GetSalesById?SalesId=" + SalesId;
        $("#ModalTitle").html("Edit Sales Record");
        $("#SalesModal").modal();
        $.ajax({
            type: "GET",
            url: url,
            success: function (data) {
                var obj = JSON.parse(data);
                $("#Id").val(obj.Id);
                $("#ProductDropDown").val(obj.ProductId);
                $("#CustomerDropDown").val(obj.CustomerId);
                $("#StoreDropDown").val(obj.StoreId);
                $("#DateSold").val(obj.DateSold.split('T')[0]);
            }
        })
    }

    $("#SaveSales").click(function () {
        var isValidate = Validation();
        if (isValidate) {
            var data = $("form").serialize();
            $.ajax({
                type: "Post",
                url: "/Sales/SaveData",
                data: data,
                success: function (result) {
                    window.location.href = "/Sales/Index";
                    $("#SalesModal").modal("hide");

                }
            })
        }
        
    })

    //Delete Confirmation
    function DeleteSales(SalesId) {
        var url = "/Sales/GetSalesById?SalesId=" + SalesId;
        $("#SalesId").val(SalesId);
        $("#DeleteConfirmation").modal();
        $.ajax({
            type: "GET",
            url: url,
            success: function (data) {
                var obj = JSON.parse(data);
                $("#SalesId").val(obj.Id);
                $("#SalesProductDropDown").val(obj.ProductId);
                $("#SalesCustomerDropDown").val(obj.CustomerId);
                $("#SalesStoreDropDown").val(obj.StoreId);
                $("#SalesDateSold").val(obj.DateSold.split('T')[0]);
            }
        })
    }

    function ConfirmDelete() {
        var id = $("#SalesId").val();
        $.ajax({
            type: "POST",
            url: "/Sales/DeleteSales?SalesId=" + id,
            success: function (result) {
                $("#DeleteConfirmation").modal("hide");
                $(".row_" + id).remove();
            }
        })
    }

    function Validation() {
        var isValidate = true;
        var product = $("#ProductDropDown").val();
        var customer = $("#CustomerDropDown").val();
        var store = $("#StoreDropDown").val();
        var date = $("#DateSold").val();

        if (!product) {
            alert("Please select for product.")
            isValidate = false;
        } else if (!customer) {
            alert("Please select for customer.")
            isValidate = false;
        } else if (!store) {
            alert("Please select for store.")
            isValidate = false;
        } else if (!date || 0 === date.length || !date.trim()) {
            alert("The Date Sold field is required.")
            isValidate = false;
        } else if (!isValidDate(date)) {
            alert("Please insert valid Date format: YYYY-MM-DD.")
            isValidate = false;
        }
        return isValidate;
    }

    function isValidDate(dateString) {
        var regEx = /^\d{4}-\d{2}-\d{2}$/;
        if (!dateString.match(regEx)) return false;  // Invalid format
        var d = new Date(dateString);
        if (!d.getTime() && d.getTime() !== 0) return false; // Invalid date
        return d.toISOString().slice(0, 10) === dateString;
    }
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}